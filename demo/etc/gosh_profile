# Load base profile
source ((($.reader parser) class) getResource "/gosh_profile")

__load_class_from = {
	(($1 class) classLoader) loadClass $2
}
__get_static_field = {
	((__load_class_from $.session $1) getField $2) get null
}
__call_static_method_no_arg = {
	((__load_class_from $.session $1) getMethod $2) invoke null
}

# Define the $.process variable
\#.process = {
    __call_static_method_no_arg "org.apache.felix.service.command.Process\$Utils" "current"
}

# with gogo-jline-1.0.4, should not be needed at all, see FELIX-5463 and FELIX-5462
(($.processor class) getMethod "addConverter" (__load_class_from $.processor "org.apache.felix.service.command.Converter")) invoke $.processor (new org.jline.demo.FunctionConverter)

__remote_ssh_support = (new org.jline.builtins.ssh.Ssh \
	{ echo "foo1" } \
	{ echo "foo2" } \
	{ (new org.apache.sshd.server.ServerBuilder) build } \
	{ (new org.apache.sshd.client.ClientBuilder) build } )
__remote_sshd = {
    # See FELIX-5464, should be:
    # a = [ "sshd" ${argv[@]} ]
	a = [ "sshd" ]
	each $argv { $a add $it }
    $__remote_ssh_support sshd (__get_static_field "java.lang.System" "out") (__get_static_field "java.lang.System" "err") ${a[@]}
}
__remote_ssh = {
    # See FELIX-5464, should be:
    # a = [ "ssh" ${argv[@]} ]
	a = [ "ssh" ]
	each $argv { $a add $it }
	$__remote_ssh_support ssh $.terminal $USER (__get_static_field "java.lang.System" "in") (__get_static_field "java.lang.System" "out") (__get_static_field "java.lang.System" "err") ${a[@]}
}
$.processor addcommand "remote" $__remote_sshd "sshd" 0
$.processor addcommand "remote" $__remote_ssh "ssh" 0

#complete -c remote:telnetd -e
#complete -c remote:telnetd -d "Telnet daemon"
#complete -c remote:telnetd -s i -l ip --description "Listening IP interface" -n '__option_not_present -i --ip'
#complete -c remote:telnetd -s p -l port --description "Listening IP port" -n '__option_not_present -p --port'
#complete -c remote:telnetd -a '[start stop status]'

complete -c remote:sshd -e
complete -c remote:sshd -d "SSH daemon"
complete -c remote:sshd -s i -l ip --description "Listening IP interface" -n '__option_not_present -i --ip'
complete -c remote:sshd -s p -l port --description "Listening IP port" -n '__option_not_present -p --port'
complete -c remote:sshd -a '[start stop status]'

#
# TTop command
#
__ttop = {
	_cl = (__load_class_from $.reader "org.jline.builtins.TTop")
	$_cl "ttop" $.terminal (__get_static_field "java.lang.System" out) (__get_static_field "java.lang.System" err) ${argv[@]}
}
$.processor addcommand "gogo" $__ttop "ttop" 0

complete -c gogo:ttop -e
complete -c gogo:ttop -d "Display and update sorted information about threads"
complete -c gogo:ttop -s o -l order --description "Comma separated list of sorting keys"
complete -c gogo:ttop -s t -l stats --description "Comma separated list of stats to display"

